import Head from 'next/head'
import Image from 'next/image'
import styles from '@/styles/Home.module.css'
import { supabase } from '@/supabase'
import Link from 'next/link'
import Navbar from '@/components/Navbar'

export default function Home({ movieData }) {

  return (
    <>
      <Head>
        <title>KINOKASSA</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Navbar />
        {
          movieData.map(movie => {
            return (
              <Link key={movie.id} href={movie.id}>
                <div className='carousel-card'>
                  <img src={movie.preview} alt={movie.nameRu} />
                  <div className='carousel-info'>
                    <h1>{movie.nameRu}</h1>
                    <p>{movie.year}</p>
                  </div>
                </div>
              </Link>
            )
          })
        }
      </main>
    </>
  )
}

export async function getServerSideProps() {
  const movieData = []

  let { data: movies, error } = await supabase
    .from('movies')
    .select('*')
  if (error) console.log(error)

  const promises = movies.map((movie) => {
    return fetch(`https://kinopoiskapiunofficial.tech/api/v2.2/films/${movie.kinopoisk_id}`, {
      method: 'GET',
      headers: {
        'X-API-KEY': process.env.KINOPOISK_TOKEN,
        'Content-Type': 'application/json',
      },
    })
      .then(res => res.json())
      .then(json => {
        const movieInfo = {
          id: movie.id,
          nameRu: json.nameRu,
          nameOriginal: json.nameOriginal,
          description: json.description,
          ratingImdb: json.ratingImdb,
          preview: json.posterUrlPreview,
          poster: json.posterUrl,
          genres: json.genres,
          year: json.year,
          filmLength: json.filmLength
        }
        movieData.push(movieInfo)
      })
      .catch(err => console.log(err))
  })

  await Promise.all(promises)

  return { props: { movieData } }
}

